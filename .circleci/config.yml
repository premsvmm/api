# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
jobs:
  test:
    docker:
      - image: golang:latest
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - run:
          name: Run the tests
          command: |
            ./run_tests.sh
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      - setup_remote_docker:
          version: 18.06.0-ce

      - run:
          name: Set Environment Variables
          command: |
            echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export IMAGE_NAME=$(echo ${CIRCLE_PROJECT_REPONAME}|tr '[:upper:]' '[:lower:]')' >> $BASH_ENV
            echo 'export DOCKER_ID=${CIRCLE_USERNAME}'>> $BASH_ENV
            echo "Env Variable is set"

      - run:
          name: Build and push Docker image
          command: |
            docker build -t $CIRCLE_USERNAME/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $CIRCLE_USERNAME/$IMAGE_NAME:$TAG
workflows:
  version: 2
  build:
    jobs:
      - test
      - build